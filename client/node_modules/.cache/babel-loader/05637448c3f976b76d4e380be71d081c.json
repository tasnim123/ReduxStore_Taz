{"ast":null,"code":"var _jsxFileName = \"/Users/tasnimrahat/Desktop/BootCamp/Unsolved copy/client/src/components/CategoryMenu/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { idbPromise } from '../../utils/helpers';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { updateCurrentCategory, updateCurrentCategories, updateCategories } from '../../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CategoryMenu(props) {\n  _s();\n\n  const {\n    updateCurrentCategory,\n    updateCurrentCategories,\n    updateCategories\n  } = props;\n  const categories = useSelector(state => state.categories);\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      updateCurrentCategories(categoryData.categories);\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        updateCategories(categories);\n      });\n    }\n  }, [categoryData, loading, updateCurrentCategories, updateCategories]);\n\n  const handleClick = id => {\n    updateCurrentCategory(id);\n\n    /*#__PURE__*/\n    _jsxDEV(Link, {\n      to: `/products/${id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), categories && categories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleClick(item._id);\n      },\n      children: item.name\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CategoryMenu, \"Dk2v8jD6M6A+ZCoc8g63j3UNheA=\", false, function () {\n  return [useSelector, useQuery];\n});\n\n_c = CategoryMenu;\nconst mapDispatchToProps = {\n  updateCurrentCategory,\n  updateCurrentCategories,\n  updateCategories\n};\nexport default connect(null, mapDispatchToProps)(CategoryMenu);\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"sources":["/Users/tasnimrahat/Desktop/BootCamp/Unsolved copy/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","connect","useSelector","useQuery","Link","idbPromise","QUERY_CATEGORIES","updateCurrentCategory","updateCurrentCategories","updateCategories","CategoryMenu","props","categories","state","loading","data","categoryData","forEach","category","then","handleClick","id","map","item","_id","name","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,qBAAT,EAAgCC,uBAAhC,EAAyDC,gBAAzD,QAAiF,qBAAjF;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,QAAM;AAAEJ,IAAAA,qBAAF;AAAyBC,IAAAA,uBAAzB;AAAkDC,IAAAA;AAAlD,MAAuEE,KAA7E;AACA,QAAMC,UAAU,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,UAAlB,CAA9B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAAkCb,QAAQ,CAACG,gBAAD,CAAhD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,YAAJ,EAAkB;AACdR,MAAAA,uBAAuB,CAACQ,YAAY,CAACJ,UAAd,CAAvB;AACAI,MAAAA,YAAY,CAACJ,UAAb,CAAwBK,OAAxB,CAAiCC,QAAD,IAAc;AAC1Cb,QAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,EAAsBa,QAAtB,CAAV;AACH,OAFD;AAGH,KALD,MAKO,IAAI,CAACJ,OAAL,EAAc;AACjBT,MAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,CAAV,CAAgCc,IAAhC,CAAsCP,UAAD,IAAgB;AACjDH,QAAAA,gBAAgB,CAACG,UAAD,CAAhB;AACH,OAFD;AAGH;AACJ,GAXQ,EAWN,CAACI,YAAD,EAAeF,OAAf,EAAwBN,uBAAxB,EAAiDC,gBAAjD,CAXM,CAAT;;AAaA,QAAMW,WAAW,GAAIC,EAAD,IAAQ;AACxBd,IAAAA,qBAAqB,CAACc,EAAD,CAArB;;AACA;AAAA,YAAC,IAAD;AAAM,MAAA,EAAE,EAAG,aAAYA,EAAG;AAA1B;AAAA;AAAA;AAAA;AAAA;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKT,UAAU,IACPA,UAAU,CAACU,GAAX,CAAgBC,IAAD,iBACX;AAEI,MAAA,OAAO,EAAE,MAAM;AACXH,QAAAA,WAAW,CAACG,IAAI,CAACC,GAAN,CAAX;AACH,OAJL;AAAA,gBAMKD,IAAI,CAACE;AANV,OACSF,IAAI,CAACC,GADd;AAAA;AAAA;AAAA;AAAA,YADJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAvCQd,Y;UAEcR,W,EACqBC,Q;;;KAHnCO,Y;AAyCT,MAAMgB,kBAAkB,GAAG;AAAEnB,EAAAA,qBAAF;AAAyBC,EAAAA,uBAAzB;AAAkDC,EAAAA;AAAlD,CAA3B;AACA,eAAeR,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkChB,YAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { idbPromise } from '../../utils/helpers';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { updateCurrentCategory, updateCurrentCategories, updateCategories } from '../../store/actions';\n\nfunction CategoryMenu(props) {\n    const { updateCurrentCategory, updateCurrentCategories, updateCategories } = props;\n    const categories = useSelector((state) => state.categories);\n    const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n    useEffect(() => {\n        if (categoryData) {\n            updateCurrentCategories(categoryData.categories);\n            categoryData.categories.forEach((category) => {\n                idbPromise('categories', 'put', category);\n            });\n        } else if (!loading) {\n            idbPromise('categories', 'get').then((categories) => {\n                updateCategories(categories);\n            });\n        }\n    }, [categoryData, loading, updateCurrentCategories, updateCategories]);\n\n    const handleClick = (id) => {\n        updateCurrentCategory(id);\n        <Link to={`/products/${id}`} />;\n    };\n\n    return (\n        <div>\n            <h2>Choose a Category:</h2>\n            {categories &&\n                categories.map((item) => (\n                    <button\n                        key={item._id}\n                        onClick={() => {\n                            handleClick(item._id);\n                        }}\n                    >\n                        {item.name}\n                    </button>\n                ))}\n        </div>\n    );\n}\n\nconst mapDispatchToProps = { updateCurrentCategory, updateCurrentCategories, updateCategories };\nexport default connect(null, mapDispatchToProps)(CategoryMenu);\n"]},"metadata":{},"sourceType":"module"}