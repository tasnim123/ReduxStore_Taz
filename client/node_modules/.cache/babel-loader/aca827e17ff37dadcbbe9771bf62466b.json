{"ast":null,"code":"var _jsxFileName = \"/Users/tasnimrahat/Desktop/BootCamp/Unsolved copy/client/src/components/ProductList/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport ProductItem from '../ProductItem';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\nimport { updateProducts } from '../../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductList(props) {\n  _s();\n\n  const {\n    updateProducts\n  } = props;\n  const currentCategory = useSelector(state => state.currentCategory);\n  const products = useSelector(state => state.products);\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS);\n  useEffect(() => {\n    if (data) {\n      updateProducts(data.products);\n      data.products.forEach(product => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then(product => {\n        updateProducts(data.product);\n      });\n    }\n  }, [data, loading, updateProducts]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return products;\n    }\n\n    return products.filter(product => product.category._id === currentCategory);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Our Products:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), products && products.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row\",\n      children: filterProducts().map(product => /*#__PURE__*/_jsxDEV(ProductItem, {\n        _id: product._id,\n        image: product.image,\n        name: product.name,\n        price: product.price,\n        quantity: product.quantity\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"You haven't added any products yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: spinner,\n      alt: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 24\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductList, \"n/2Jucz5xXVye00mLFQ1owItzXA=\", false, function () {\n  return [useSelector, useSelector, useQuery];\n});\n\n_c = ProductList;\nconst mapDispatchToProps = {\n  updateProducts\n};\nexport default connect(null, mapDispatchToProps)(ProductList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/tasnimrahat/Desktop/BootCamp/Unsolved copy/client/src/components/ProductList/index.js"],"names":["React","useEffect","connect","useSelector","ProductItem","useQuery","QUERY_PRODUCTS","idbPromise","spinner","updateProducts","ProductList","props","currentCategory","state","products","loading","data","forEach","product","then","filterProducts","filter","category","_id","length","map","image","name","price","quantity","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,cAAT,QAA+B,qBAA/B;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM;AAAEF,IAAAA;AAAF,MAAqBE,KAA3B;AACA,QAAMC,eAAe,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,eAAlB,CAAnC;AACA,QAAME,QAAQ,GAAGX,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA5B;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBX,QAAQ,CAACC,cAAD,CAAlC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,IAAJ,EAAU;AACNP,MAAAA,cAAc,CAACO,IAAI,CAACF,QAAN,CAAd;AACAE,MAAAA,IAAI,CAACF,QAAL,CAAcG,OAAd,CAAuBC,OAAD,IAAa;AAC/BX,QAAAA,UAAU,CAAC,UAAD,EAAa,KAAb,EAAoBW,OAApB,CAAV;AACH,OAFD;AAGH,KALD,MAKO,IAAI,CAACH,OAAL,EAAc;AACjBR,MAAAA,UAAU,CAAC,UAAD,EAAa,KAAb,CAAV,CAA8BY,IAA9B,CAAoCD,OAAD,IAAa;AAC5CT,QAAAA,cAAc,CAACO,IAAI,CAACE,OAAN,CAAd;AACH,OAFD;AAGH;AACJ,GAXQ,EAWN,CAACF,IAAD,EAAOD,OAAP,EAAgBN,cAAhB,CAXM,CAAT;;AAaA,WAASW,cAAT,GAA0B;AACtB,QAAI,CAACR,eAAL,EAAsB;AAClB,aAAOE,QAAP;AACH;;AACD,WAAOA,QAAQ,CAACO,MAAT,CAAiBH,OAAD,IAAaA,OAAO,CAACI,QAAR,CAAiBC,GAAjB,KAAyBX,eAAtD,CAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKE,QAAQ,IAAIA,QAAQ,CAACU,MAArB,gBACG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKJ,cAAc,GAAGK,GAAjB,CAAsBP,OAAD,iBAClB,QAAC,WAAD;AAEI,QAAA,GAAG,EAAEA,OAAO,CAACK,GAFjB;AAGI,QAAA,KAAK,EAAEL,OAAO,CAACQ,KAHnB;AAII,QAAA,IAAI,EAAER,OAAO,CAACS,IAJlB;AAKI,QAAA,KAAK,EAAET,OAAO,CAACU,KALnB;AAMI,QAAA,QAAQ,EAAEV,OAAO,CAACW;AANtB,SACSX,OAAO,CAACK,GADjB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADH,gBAcG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBR,EAkBKR,OAAO,gBAAG;AAAK,MAAA,GAAG,EAAEP,OAAV;AAAmB,MAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAH,GAAyC,IAlBrD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAhDQE,W;UAEmBP,W,EACPA,W,EACSE,Q;;;KAJrBK,W;AAiDT,MAAMoB,kBAAkB,GAAG;AAAErB,EAAAA;AAAF,CAA3B;AACA,eAAeP,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCpB,WAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport ProductItem from '../ProductItem';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\nimport { updateProducts } from '../../store/actions';\n\nfunction ProductList(props) {\n    const { updateProducts } = props;\n    const currentCategory = useSelector((state) => state.currentCategory);\n    const products = useSelector((state) => state.products);\n    const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n    useEffect(() => {\n        if (data) {\n            updateProducts(data.products);\n            data.products.forEach((product) => {\n                idbPromise('products', 'put', product);\n            });\n        } else if (!loading) {\n            idbPromise('products', 'get').then((product) => {\n                updateProducts(data.product);\n            });\n        }\n    }, [data, loading, updateProducts]);\n\n    function filterProducts() {\n        if (!currentCategory) {\n            return products;\n        }\n        return products.filter((product) => product.category._id === currentCategory);\n    }\n\n    return (\n        <div className=\"my-2\">\n            <h2>Our Products:</h2>\n            {products && products.length ? (\n                <div className=\"flex-row\">\n                    {filterProducts().map((product) => (\n                        <ProductItem\n                            key={product._id}\n                            _id={product._id}\n                            image={product.image}\n                            name={product.name}\n                            price={product.price}\n                            quantity={product.quantity}\n                        />\n                    ))}\n                </div>\n            ) : (\n                <h3>You haven't added any products yet!</h3>\n            )}\n            {loading ? <img src={spinner} alt=\"loading\" /> : null}\n        </div>\n    );\n}\nconst mapDispatchToProps = { updateProducts };\nexport default connect(null, mapDispatchToProps)(ProductList);\n"]},"metadata":{},"sourceType":"module"}