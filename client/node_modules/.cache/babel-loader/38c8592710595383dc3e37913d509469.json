{"ast":null,"code":"var _jsxFileName = \"/Users/tasnimrahat/Desktop/BootCamp/Redux Store/client/src/components/ProductItem/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { pluralize } from '../../utils/helpers';\nimport { idbPromise } from '../../utils/helpers';\nimport { updateCartQuantity, addToCart } from '../../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductItem(props) {\n  _s();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity,\n    updateCartQuantity,\n    addToCart\n  } = props;\n  const cart = useSelector(state => state.cart);\n\n  const handleAddToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === _id);\n\n    if (itemInCart) {\n      updateCartQuantity(_id, parseInt(itemInCart.purchaseQuantity) + 1);\n      idbPromise('cart', 'put', { ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      addToCart({\n        image,\n        name,\n        _id,\n        price,\n        quantity,\n        purchaseQuantity: 1\n      });\n      idbPromise('cart', 'put', {\n        image,\n        name,\n        _id,\n        price,\n        quantity,\n        purchaseQuantity: 1\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card px-1 py-1\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/products/${_id}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: name,\n        src: `/images/${image}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [quantity, \" \", pluralize('item', quantity), \" in stock\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"$\", price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddToCart,\n      children: \"Add to cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductItem, \"F/eUaK1jsOscSpo7EHWodw6fhDE=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProductItem;\nconst mapDispatchToProps = {\n  updateCartQuantity,\n  addToCart\n};\nexport default connect(null, mapDispatchToProps)(ProductItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"sources":["/Users/tasnimrahat/Desktop/BootCamp/Redux Store/client/src/components/ProductItem/index.js"],"names":["React","connect","useSelector","Link","pluralize","idbPromise","updateCartQuantity","addToCart","ProductItem","props","image","name","_id","price","quantity","cart","state","handleAddToCart","itemInCart","find","cartItem","parseInt","purchaseQuantity","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,kBAAT,EAA6BC,SAA7B,QAA8C,qBAA9C;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,GAAf;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA,QAA3B;AAAqCR,IAAAA,kBAArC;AAAyDC,IAAAA;AAAzD,MAAuEE,KAA7E;AACA,QAAMM,IAAI,GAAGb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;;AAEA,QAAME,eAAe,GAAG,MAAM;AAC1B,UAAMC,UAAU,GAAGH,IAAI,CAACI,IAAL,CAAWC,QAAD,IAAcA,QAAQ,CAACR,GAAT,KAAiBA,GAAzC,CAAnB;;AACA,QAAIM,UAAJ,EAAgB;AACZZ,MAAAA,kBAAkB,CAACM,GAAD,EAAMS,QAAQ,CAACH,UAAU,CAACI,gBAAZ,CAAR,GAAwC,CAA9C,CAAlB;AACAjB,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,EACtB,GAAGa,UADmB;AAEtBI,QAAAA,gBAAgB,EAAED,QAAQ,CAACH,UAAU,CAACI,gBAAZ,CAAR,GAAwC;AAFpC,OAAhB,CAAV;AAIH,KAND,MAMO;AACHf,MAAAA,SAAS,CAAC;AAAEG,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeC,QAAAA,GAAf;AAAoBC,QAAAA,KAApB;AAA2BC,QAAAA,QAA3B;AAAqCQ,QAAAA,gBAAgB,EAAE;AAAvD,OAAD,CAAT;AACAjB,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB;AAAEK,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeC,QAAAA,GAAf;AAAoBC,QAAAA,KAApB;AAA2BC,QAAAA,QAA3B;AAAqCQ,QAAAA,gBAAgB,EAAE;AAAvD,OAAhB,CAAV;AACH;AACJ,GAZD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,aAAYV,GAAI,EAA3B;AAAA,8BACI;AAAK,QAAA,GAAG,EAAED,IAAV;AAAgB,QAAA,GAAG,EAAG,WAAUD,KAAM;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,8BACI;AAAA,mBACKG,QADL,OACgBV,SAAS,CAAC,MAAD,EAASU,QAAT,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,wBAAQD,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAWI;AAAQ,MAAA,OAAO,EAAEI,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAjCQT,W;UAEQN,W;;;KAFRM,W;AAmCT,MAAMe,kBAAkB,GAAG;AAAEjB,EAAAA,kBAAF;AAAsBC,EAAAA;AAAtB,CAA3B;AACA,eAAeN,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCf,WAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { pluralize } from '../../utils/helpers';\nimport { idbPromise } from '../../utils/helpers';\nimport { updateCartQuantity, addToCart } from '../../store/actions';\n\nfunction ProductItem(props) {\n    const { image, name, _id, price, quantity, updateCartQuantity, addToCart } = props;\n    const cart = useSelector((state) => state.cart);\n\n    const handleAddToCart = () => {\n        const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n        if (itemInCart) {\n            updateCartQuantity(_id, parseInt(itemInCart.purchaseQuantity) + 1);\n            idbPromise('cart', 'put', {\n                ...itemInCart,\n                purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n            });\n        } else {\n            addToCart({ image, name, _id, price, quantity, purchaseQuantity: 1 });\n            idbPromise('cart', 'put', { image, name, _id, price, quantity, purchaseQuantity: 1 });\n        }\n    };\n\n    return (\n        <div className=\"card px-1 py-1\">\n            <Link to={`/products/${_id}`}>\n                <img alt={name} src={`/images/${image}`} />\n                <p>{name}</p>\n            </Link>\n            <div>\n                <div>\n                    {quantity} {pluralize('item', quantity)} in stock\n                </div>\n                <span>${price}</span>\n            </div>\n            <button onClick={handleAddToCart}>Add to cart</button>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = { updateCartQuantity, addToCart };\nexport default connect(null, mapDispatchToProps)(ProductItem);\n"]},"metadata":{},"sourceType":"module"}